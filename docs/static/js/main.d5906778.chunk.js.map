{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onClick","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"4LAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,uBAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KA6B9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BC,QAAQC,IAAK,SAEbV,GAAe,SAAAW,GAAI,MAAI,CAACT,MACxBC,EAAc,MAKlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,QA5Bc,WACH,wBAAfZ,GACAC,EAAc,KA2BVY,SAtBc,SAAEV,GACxBF,EAAeE,EAAEW,OAAOH,a,8BClBnBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEwCC,UAAWH,GAFnD,gEAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAVpB,kBAcRM,GAdQ,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,qBAAKc,UAAU,yCAAf,SACI,qBAAKC,IAAKf,EAAKgB,IAAMN,OCHpBO,EAAU,SAAC,GAAgB,IAAD,ECCV,SAAEnB,GAAe,IAAD,EAEfjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAqBzC,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGvB,CAAEpB,IAIGqB,EDpBwBK,CAFI,EAAd1B,UAETa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAOpB,OACI,qCAEKA,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEevBgB,EAhCM,SAAAC,GAAU,IAAD,EAEW7C,mBAAS,IAFpB,mBAElB8C,EAFkB,KAEN/C,EAFM,KAU1B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ+C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADHA,Y,MClBhC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d5906778.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n//Esto es un componente hijo de GifExpertApp jejejej\r\n//Desestructiramos el props.setCategories abajo\r\nexport const AddCategory = ( {setCategories }) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('Busca cualquier gif'); //Vacio seria un undefined y daria WARNING!\r\n   \r\n    \r\n    const handleDeleteState = () =>{\r\n        if( inputValue === 'Busca cualquier gif'){\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 0) {\r\n            console.log( 'Done!');\r\n            \r\n            setCategories( cats => [inputValue/* , ...cats */]);\r\n            setInputValue('');\r\n        } \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input\r\n                type='text'\r\n                value={ inputValue }\r\n                onClick= { handleDeleteState }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n//ESTO ES UN CANDADO PARA OBLIGAR A MANDAR LA FUNCION DESDE GiftExpertAPP\r\nAddCategory.propTypes ={\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category) =>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=500&api_key=mVLMZ8JDE645lYqdRJZnoIp3fn0xDOE1`\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized.url   //Signo de interrogacion por si no viene nada\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={ title} />\r\n            {/* <p>{title}</p> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category )\r\n\r\n\r\n    // console.log(images)\r\n    // console.log(loading)\r\n\r\n//Si loading es true pone loading              {loading && <p>Loading</p>}  \r\n    return (\r\n        <>\r\n{/*             <h3>{category}</h3> */}\r\n            {loading && <p>Loading</p>}  \r\n            <div className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map( img  =>(\r\n                            <GifGridItem \r\n                            key={ img.id }\r\n                            {...img } \r\n                            />\r\n                        ))\r\n                    }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs =  ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs =>{\r\n          \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    },[ category ])\r\n\r\n    \r\n\r\n    return state //{ data: [], loading: true}\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const  [categories, setCategories] = useState([])\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories( cats => [...cats , 'Naruto']); \r\n\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr></hr>\r\n\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category =>(\r\n                        <GifGrid \r\n                        key = { category }\r\n                        category={ category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}